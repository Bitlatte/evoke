.\" Automatically generated by Pandoc 3.7.0.2
.\"
.TH "" "" "" ""
.SH Getting Started with Evoke
Welcome to Evoke!
This guide will walk you through installing Evoke and creating your
first website.
.SS Installation
You can install Evoke in one of the following ways:
.PP
\f[B]1.
Installer Script (Recommended):\f[R]
.PP
You can use the following command to download and install the latest
version of Evoke for your system:
.IP
.EX
curl \-sSL https://raw.githubusercontent.com/Bitlatte/evoke/main/install.sh \f[B]|\f[R] sh
.EE
.PP
\f[B]2.
From a Release:\f[R]
.PP
Download the pre\-compiled binary for your operating system from the \c
.UR https://github.com/Bitlatte/evoke/releases/latest
latest release
.UE \c
\ on GitHub.
Unzip the archive and place the \f[CR]evoke\f[R] binary in a directory
that is in your system\(cqs \f[CR]PATH\f[R].
.PP
\f[B]3.
From Source:\f[R]
.PP
If you have Go installed, you can also install Evoke from source using
the \f[CR]go install\f[R] command:
.IP
.EX
go install github.com/Bitlatte/evoke/cmd/evoke\(atlatest
.EE
.SS Your First Project
The easiest way to start a new Evoke project is to use the
\f[CR]init\f[R] command.
.IP "1." 3
\f[B]Initialize the Project:\f[R]
.RS 4
.PP
Run the \f[CR]evoke init\f[R] command.
This will create a basic project structure for you.
.IP
.EX
evoke init
.EE
.RE
.IP "2." 3
\f[B]Create Your First Page:\f[R]
.RS 4
.PP
You can now create a file named \f[CR]index.md\f[R] inside the
\f[CR]content\f[R] directory:
.IP
.EX
# Welcome to My Awesome Site!

This is my first page. I can use **Markdown** to format my text.
.EE
.RE
.IP "3." 3
\f[B]Build Your Site:\f[R]
.RS 4
.PP
Run the \f[CR]evoke build\f[R] command from your project\(cqs root
directory:
.IP
.EX
evoke build
.EE
.PP
Evoke will generate your static site in a new \f[CR]dist\f[R] directory.
Open \f[CR]dist/index.html\f[R] in your browser to see the result.
.RE
.SS Live Reloading
Evoke comes with a built\-in development server that will automatically
reload your site when you make changes.
To start the development server, run the \f[CR]evoke serve\f[R] command
from the root of your project.
.IP
.EX
evoke serve
.EE
.PP
This will start a local web server at \f[CR]http://localhost:8990\f[R].
Open this URL in your browser to see your site.
Now, whenever you make a change to a file in your project, Evoke will
automatically rebuild your site and reload the page in your browser.
.SS Project Structure Explained
As your project grows, you can add more directories to organize your
files:
.IP
.EX
\&.
├── content/      # Your site\(aqs pages (Markdown or HTML)
├── partials/     # Reusable HTML snippets
├── public/       # Static assets (CSS, images, etc.)
├── plugins/      # Custom Evoke plugins
└── evoke.yaml    # Optional configuration file
.EE
.IP \(bu 2
\f[B]\f[CB]content/\f[B]\f[R]: This is where all your website\(cqs pages
live.
Evoke processes these files and converts them to HTML.
.IP \(bu 2
\f[B]\f[CB]partials/\f[B]\f[R]: This directory holds reusable HTML
snippets that you can include in your pages, like headers or footers.
.IP \(bu 2
\f[B]\f[CB]public/\f[B]\f[R]: Any files in this directory (e.g., CSS,
JavaScript, images) are copied directly to the \f[CR]dist\f[R] folder
without changes.
.IP \(bu 2
\f[B]\f[CB]plugins/\f[B]\f[R]: You can add custom Go code here to extend
Evoke\(cqs functionality.
.IP \(bu 2
\f[B]\f[CB]evoke.yaml\f[B]\f[R]: This optional file allows you to
customize your site\(cqs settings.
.SS What\(cqs Next?
You\(cqve successfully built your first site with Evoke!
To learn more about what you can do, check out the \f[B]Core
Concepts\f[R].
