.\" Automatically generated by Pandoc 3.7.0.2
.\"
.TH "" "" "" ""
.SH Plugin Service Definition
This document provides the full definition of the \f[CR]Plugin\f[R] gRPC
service, which is used to create plugins for Evoke.
.SS Service Definition
\(ga\(ga\(gaprotobuf syntax = \(lqproto3\(rq;
.PP
package proto;
.PP
option go_package = \(lqgithub.com/Bitlatte/evoke/proto\(rq;
.PP
// The main service that plugins must implement.
service Plugin { // \(em General Build Hooks \(em
.PP
// Called once before the entire build process begins.
// Useful for setup tasks or pre\-build validation.
rpc OnPreBuild(OnPreBuildRequest) returns (OnPreBuildResponse);
.PP
// Called after the configuration file (evoke.yaml) is loaded.
// Allows plugins to read or even modify the configuration.
rpc OnConfigLoaded(OnConfigLoadedRequest) returns
(OnConfigLoadedResponse);
.PP
// Called after the `public' directory has been copied to `dist'.
rpc OnPublicAssetsCopied(OnPublicAssetsCopiedRequest) returns
(OnPublicAssetsCopiedResponse);
.PP
// \(em Content Processing Hooks \(em
.PP
// Called for each content file after it\(cqs read from disk but before
any processing.
// Allows modification of the raw file content.
rpc OnContentLoaded(OnContentLoadedRequest) returns
(OnContentLoadedResponse);
.PP
// Called before the Markdown (or other format) content is rendered to
HTML.
// A plugin could use this to implement a custom renderer.
rpc OnContentRender(OnContentRenderRequest) returns
(OnContentRenderResponse);
.PP
// Called after content is rendered to HTML but before it\(cqs placed in
a layout.
// Useful for post\-processing the core HTML content.
rpc OnHTMLRendered(OnHTMLRenderedRequest) returns
(OnHTMLRenderedResponse);
.PP
// \(em Finalization Hooks \(em
.PP
// Called once after all content has been processed and written to disk.
rpc OnPostBuild(OnPostBuildRequest) returns (OnPostBuildResponse); }
.PP
// Represents a file being processed.
This message will be reused for // multiple hooks to pass content back
and forth.
message ContentFile { // The relative path of the file from the content
directory.
string path = 1; // The raw or processed content of the file.
bytes content = 2; }
.PP
// Represents an asset being processed by a custom pipeline.
message Asset { string path = 1; bytes content = 2; string pipeline_name
= 3; }
.PP
// Represents a custom pipeline that can be registered by a plugin.
message Pipeline { string name = 1; repeated string extensions = 2; }
.PP
message OnPreBuildRequest {} message OnPreBuildResponse {}
.PP
message OnConfigLoadedRequest { bytes config = 1; } message
OnConfigLoadedResponse { bytes config = 1; }
.PP
message OnPublicAssetsCopiedRequest {} message
OnPublicAssetsCopiedResponse {}
.PP
message OnContentLoadedRequest { string path = 1; bytes content = 2; }
message OnContentLoadedResponse { bytes content = 1; }
.PP
message OnContentRenderRequest { string path = 1; bytes content = 2; }
message OnContentRenderResponse { bytes content = 1; }
.PP
message OnHTMLRenderedRequest { string path = 1; bytes content = 2; }
message OnHTMLRenderedResponse { bytes content = 1; }
.PP
message OnPostBuildRequest {} message OnPostBuildResponse {}
